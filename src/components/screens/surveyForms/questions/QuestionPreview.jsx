import React, {useEffect, useState} from 'react'
import {AUDIENCE_SELECT, QUESTION_TYPE} from '../../../../utils/constants'
import MultipleOptionRender from './QuestionTypeComponents/MultipleOptionRender'
import {Stack, Tab, Tabs, Grid} from '@mui/material'
import WbTabPanel from '../../../common/WbTabPanel'
import WbTab from '../../../common/WbTab'
import TextQuestionRender from './QuestionTypeComponents/TextQuestionRender'
import RankingQuestionRender from './QuestionTypeComponents/RankingQuestionRander'
import NumberSliderRender from './QuestionTypeComponents/NumberSliderRender'
import PercentageQuestionRender from './QuestionTypeComponents/PercentageQuestionRender'
import MultipleSelectRender from './QuestionTypeComponents/MultipleSelectRender'
import YesNoMayRender from './QuestionTypeComponents/YesNoMayRender'

export default function QuestionPreview({question, tabs, hasQuestion}) {
  const [value, setValue] = useState(1)
  useEffect(() => {
    setValue(tabs ? Math.min(...tabs) : 1)
  }, [tabs])

  const renderQuestion = () => {
    return AUDIENCE_SELECT.filter(x => tabs?.includes(x.value)).map(
      (audience, index) => (
        <WbTabPanel value={value} index={audience.value}>
          {getPreview({...question}, audience.value)}
        </WbTabPanel>
      )
    )
  }

  const getPreview = (question, tab) => {
    switch (question.questionType) {
      case QUESTION_TYPE.NUMBER_SLIDER:
        return <NumberSliderRender question={{...question}} audience={tab} />
      case QUESTION_TYPE.MULTIPLE_SELECT:
        return <MultipleSelectRender question={{...question}} audience={tab} />
      case QUESTION_TYPE.YES_NO:
      case QUESTION_TYPE.YES_NO_MAYBE:
        return <YesNoMayRender question={{...question}} audience={tab} />
      case QUESTION_TYPE.LIKERT:
      case QUESTION_TYPE.MULTIPLE_CHOICE:
        return <MultipleOptionRender question={{...question}} audience={tab} />
      case QUESTION_TYPE.COMMENTS:
        return <TextQuestionRender question={{...question}} audience={tab} />
      case QUESTION_TYPE.RANKING:
        return <RankingQuestionRender question={{...question}} audience={tab} />
      case QUESTION_TYPE.PERCENTAGE:
        return (
          <PercentageQuestionRender question={{...question}} audience={tab} />
        )
      default:
        return (
          <div className="nothing-to-see">
            <Grid container>
              <Grid item lg={12}>
                <svg
                  width="197"
                  height="177"
                  viewBox="0 0 197 177"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M190.47 128.025C187.277 120.653 181.144 114.5 173.777 111.473C166.105 108.32 157.294 109.467 149.213 108.411C142.193 107.494 137.13 104.313 132.938 98.6586C128.922 93.2404 125.321 87.2399 118.756 84.7332C113.568 82.7523 107.669 83.3023 102.513 85.3652C93.0122 89.1683 85.8353 97.2533 79.7912 105.309C74.273 112.663 69.7723 120.716 59.5654 120.978C49.3518 121.24 39.6285 115.327 29.346 116.894C15.7553 118.965 4.43547 130.45 2.06392 144.121C-0.15924 156.934 5.41854 169.363 15.0015 176.664H179.714C191.789 163.661 198.125 145.7 190.47 128.025Z"
                    fill="#F7F0E3"
                  />
                  <path
                    d="M41.5715 176.664H42.0246C45.1712 173.153 47.6369 168.894 49.2029 164.165C51.7387 156.512 51.6327 148.479 48.9021 141.548C47.5229 138.045 45.5303 134.781 43.6026 131.624C41.6484 128.422 39.6279 125.111 38.2567 121.563C37.6896 120.096 37.2709 118.521 37.0192 116.914C36.9053 116.899 36.7913 116.887 36.6787 116.873C36.9318 118.537 37.3624 120.169 37.9493 121.686C39.3311 125.261 41.3609 128.586 43.323 131.8C45.2428 134.944 47.2275 138.197 48.5961 141.672C51.2975 148.529 51.4022 156.48 48.8902 164.058C47.3043 168.845 44.787 173.144 41.5728 176.664H41.5715Z"
                    fill="white"
                  />
                  <path
                    d="M178.918 162.083C182.312 162.818 185.582 163.475 188.745 163.89C188.799 163.783 188.852 163.677 188.905 163.571C185.716 163.159 182.414 162.496 178.987 161.754C173.767 160.626 168.117 159.403 162.513 159.403C159.043 159.403 155.592 159.871 152.272 161.121C151.014 161.594 149.802 162.194 148.647 162.909C145.649 161.613 142.635 160.197 139.65 158.642C141.816 156.985 144.006 155.364 146.218 153.795C162.644 142.154 177.804 135.553 192.449 133.68C192.42 133.571 192.389 133.462 192.359 133.353C177.674 135.241 162.483 141.859 146.03 153.52C143.77 155.121 141.535 156.78 139.324 158.471C135.966 156.711 132.649 154.776 129.437 152.64C123.613 148.767 116.687 143.239 110.637 135.892C134.081 133.223 157.949 129.859 177.441 116.636C178.181 116.134 179.001 115.541 179.851 114.87C179.757 114.803 179.661 114.736 179.567 114.668C178.754 115.309 177.968 115.873 177.258 116.356C157.771 129.576 133.859 132.913 110.385 135.583C106.11 130.334 102.29 124.17 99.6367 117.033C95.5017 105.915 95.7203 95.0062 100.236 87.1001C100.432 86.7571 100.638 86.4183 100.852 86.0847C100.663 86.1722 100.477 86.2636 100.29 86.3551C100.173 86.546 100.059 86.7383 99.9493 86.932C95.3838 94.9255 95.1572 105.939 99.3266 117.151C101.967 124.249 105.752 130.389 109.992 135.627C108.633 135.782 107.273 135.934 105.919 136.086C101.032 136.633 95.976 137.199 91.0686 137.841C89.2773 138.075 87.4556 138.348 85.6419 138.691C81.756 130.365 77.4872 122.244 71.969 115.278C71.8895 115.357 71.81 115.435 71.7305 115.514C77.201 122.427 81.4433 130.489 85.3067 138.755C77.3997 140.286 69.722 143.163 65.6228 149.861C61.7939 156.115 61.7978 164.761 65.6334 175.557C65.7659 175.931 65.9023 176.298 66.0415 176.664H66.3965C66.2442 176.264 66.0931 175.86 65.9461 175.443C62.1463 164.748 62.133 156.2 65.905 150.037C69.9552 143.419 77.5918 140.58 85.455 139.069C86.8276 142.014 88.1525 144.984 89.4695 147.936L89.6125 148.258C94.1874 158.508 98.9186 168.399 105.112 176.665H105.526C99.275 168.384 94.5173 158.434 89.9133 148.119L89.7702 147.798C88.4639 144.871 87.1496 141.926 85.7902 139.005C87.5682 138.672 89.3555 138.404 91.1123 138.176C96.0171 137.534 101.07 136.968 105.958 136.421C107.385 136.261 108.815 136.101 110.246 135.938C116.354 143.399 123.369 149.004 129.26 152.921C132.436 155.034 135.716 156.95 139.035 158.696C133.4 163.022 127.92 167.573 122.569 172.016C120.716 173.555 118.842 175.109 116.953 176.664H117.478C119.26 175.197 121.028 173.729 122.778 172.277C128.167 167.803 133.686 163.218 139.361 158.868C142.33 160.419 145.327 161.832 148.309 163.127C144.23 165.76 140.904 169.839 138.894 174.79C138.643 175.41 138.423 176.037 138.22 176.665H138.568C138.761 176.08 138.966 175.497 139.2 174.918C141.216 169.953 144.569 165.878 148.68 163.287C157.016 166.882 165.208 169.55 172.248 171.664L172.513 171.743C175.48 172.633 178.514 173.547 181.198 175.011C181.274 174.924 181.349 174.838 181.423 174.75C178.695 173.248 175.618 172.323 172.608 171.42L172.343 171.341C165.375 169.249 157.276 166.613 149.03 163.072C150.104 162.422 151.229 161.875 152.392 161.437C160.986 158.204 170.516 160.265 178.923 162.083H178.918Z"
                    fill="white"
                  />
                  <path
                    d="M15.8321 140.306C17.2947 146.384 16.6429 152.948 14.0408 158.315C12.337 161.831 9.8767 165.014 6.84668 167.746C6.9063 167.842 6.96857 167.936 7.02951 168.03C10.1086 165.261 12.6086 162.032 14.3376 158.463C16.9728 153.026 17.6339 146.379 16.1527 140.225C14.9961 135.417 12.6696 131.345 9.45406 128.399C9.38252 128.485 9.31097 128.571 9.24075 128.657C12.4019 131.558 14.69 135.569 15.8307 140.306H15.8321Z"
                    fill="white"
                  />
                  <path
                    d="M90.797 63.3078C93.6826 66.3 94.9757 71.343 93.3845 75.9906C91.8437 80.4917 88.4665 84.2195 84.4097 86.6172C81.1452 88.5457 76.887 89.6094 73.6768 87.5895C71.2774 86.0807 70.0334 83.1194 69.9645 80.2563C69.8956 77.3919 70.8442 74.6014 72.0167 71.9952C73.6702 68.3226 75.8947 64.7602 79.2095 62.5265C83.7777 59.4469 88.0227 60.4313 90.797 63.3078Z"
                    fill="#F7F0E3"
                  />
                  <path
                    d="M52.5493 10.8337H28.6562V0H52.5493V10.8337ZM29.1531 10.3294H52.0525V0.5043H29.1531V10.3294Z"
                    fill="#E9DDCA"
                  />
                  <path
                    d="M37.0053 21.1954H13.1123V10.3617H37.0053V21.1954ZM13.6091 20.6911H36.5085V10.866H13.6091V20.6911Z"
                    fill="#E9DDCA"
                  />
                  <path
                    d="M149.295 32.7391C147.748 27.5173 145.027 22.7231 141.131 18.3404C137.228 13.9576 131.905 10.3388 125.161 7.47705C118.418 4.61532 109.85 3.18445 99.4571 3.18445C91.166 3.18445 82.7171 4.31946 74.1093 6.58948C65.4936 8.86758 58.0199 12.1072 51.6816 16.3178L59.933 39.3112L55.5106 42.9475L61.9244 44.8612C68.2547 41.4978 74.0232 39.0557 79.2274 37.5347C84.4236 36.0218 89.9457 35.2647 95.8004 35.2647C101.655 35.2647 106.075 36.6955 109.081 39.5573C112.087 42.4271 113.587 45.8725 113.587 49.919C113.587 54.8033 112.04 59.1376 108.962 62.9286C105.868 66.7196 102.457 70.5509 98.7191 74.4239C96.125 77.1135 93.6024 79.8919 91.166 82.7536C88.7308 85.6234 86.5726 88.6909 84.7085 91.9803C82.8364 95.2616 81.3366 98.7971 80.2025 102.588C79.0605 106.379 78.4974 110.63 78.4974 115.342C78.4974 116.863 78.5292 118.672 78.6166 120.778C78.6312 121.167 78.6511 121.544 78.6736 121.918H72.6109L79.2274 126.46H111.398C111.231 125.448 111.152 124.272 111.152 122.924V119.89C111.152 117.029 111.723 114.209 112.857 111.429C113.991 108.649 115.419 106.001 117.126 103.469C118.831 100.945 120.736 98.5429 122.853 96.2742C124.964 93.9962 126.995 91.8499 128.946 89.8273C131.541 87.1377 134.222 84.2773 136.983 81.2421C139.744 78.2082 142.187 75.017 144.298 71.6456C146.409 68.2742 148.153 64.6149 149.534 60.6518C150.914 56.6968 151.613 52.3625 151.613 47.6422C151.613 42.922 150.835 37.9637 149.295 32.7418V32.7391Z"
                    fill="#E49B31"
                  />
                  <path
                    d="M88.9894 33.6603C83.2036 33.6603 77.7464 34.3919 72.6111 35.8564C67.4679 37.3289 61.7683 39.6918 55.5108 42.9475L45.3887 15.324C51.6527 11.2492 59.039 8.11315 67.5541 5.90902C76.0612 3.71296 84.4106 2.61426 92.6037 2.61426C102.874 2.61426 111.343 3.9994 118.007 6.76835C124.671 9.53729 129.932 13.0392 133.791 17.2807C137.641 21.5222 140.329 26.1617 141.858 31.2155C143.379 36.2692 144.147 41.0756 144.147 45.6358C144.147 50.196 143.457 54.3985 142.094 58.2258C140.729 62.0612 139.004 65.6034 136.919 68.8659C134.833 72.1284 132.418 75.216 129.69 78.1531C126.962 81.0901 124.311 83.8591 121.747 86.4613C119.818 88.4193 117.811 90.4957 115.726 92.7011C113.632 94.8972 111.751 97.221 110.064 99.6645C108.379 102.116 106.967 104.678 105.846 107.368C104.725 110.057 104.161 112.787 104.161 115.556V118.493C104.161 119.799 104.239 120.937 104.403 121.916H72.6098C72.2799 120.284 72.0852 118.454 72.0057 116.417C71.9196 114.379 71.8878 112.628 71.8878 111.156C71.8878 106.596 72.4442 102.482 73.573 98.8119C74.6939 95.1433 76.1764 91.7208 78.026 88.5457C79.8689 85.3625 82.0006 82.3946 84.408 79.6162C86.8153 76.8473 89.3087 74.1563 91.8724 71.5541C95.5648 67.8062 98.9367 64.0972 101.995 60.4286C105.036 56.76 106.565 52.5655 106.565 47.8386C106.565 43.9225 105.084 40.5887 102.112 37.8117C99.1407 35.0428 94.7659 33.6576 88.9881 33.6576L88.9894 33.6603Z"
                    fill="#FBC343"
                  />
                  <path
                    d="M113.599 158.155C113.599 164.043 111.721 168.585 107.965 171.79C104.21 175.002 99.9655 176.6 95.2264 176.6C90.4872 176.6 86.237 175.002 82.4823 171.79C78.7328 168.585 76.8555 164.043 76.8555 158.155C76.8555 152.268 78.7328 147.732 82.4823 144.52C88.2628 139.569 96.8149 138.466 103.582 141.941C109.588 145.025 113.599 151.287 113.599 158.155Z"
                    fill="#E49B31"
                  />
                  <path
                    d="M107.306 158.155C107.306 164.043 105.428 168.586 101.672 171.79C97.9175 175.002 93.6725 176.601 88.9334 176.601C84.1943 176.601 79.944 175.002 76.1893 171.79C72.4399 168.586 70.5625 164.043 70.5625 158.155C70.5625 152.268 72.4399 147.732 76.1893 144.52C79.944 141.316 84.189 139.71 88.9334 139.71C93.6778 139.71 97.9161 141.316 101.672 144.52C105.427 147.732 107.306 152.274 107.306 158.155Z"
                    fill="#FBC343"
                  />
                  <path
                    d="M196.123 176.328H0.876953V177H196.123V176.328Z"
                    fill="#102048"
                  />
                </svg>
              </Grid>
              <Grid item lg={12}>
                <h1>Nothing to see here yet.</h1>
              </Grid>
              <Grid item lg={12}>
                {hasQuestion}
                {!hasQuestion && <span>Add your first question.</span>}
              </Grid>
            </Grid>
          </div>
        )
    }
  }
  const getTabs = () => (
    <Tabs
      value={value}
      onChange={(e, v) => setValue(v)}
      centered
      className="custom-tabs"
      aria-label="preview-tab"
    >
      {AUDIENCE_SELECT.filter(x => tabs?.includes(x.value)).map(
        (audience, index) => (
          <WbTab
            value={audience.value}
            label={audience.label}
            onClick={e => setValue(audience.value)}
          />
        )
      )}
    </Tabs>
  )

  return (
    <div className="question-preview grow">
      <Grid container justifyContent="center">
        <Grid item lg={12} md={12} sm={12} xs={12}>
          <div className="preview-tabs">{getTabs()}</div>
        </Grid>
        <Grid item lg={12} md={12} sm={12} xs={12}>
          <div className="preview">
            <div className="question-box">
              {question ? renderQuestion() : 'Select a question to preview'}
            </div>
          </div>
        </Grid>
      </Grid>
    </div>
  )
}
